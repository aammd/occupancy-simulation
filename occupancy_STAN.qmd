---
title: "Simple occupancy STAN"
author: "Andrew MacDonald and Gabriel Bergeron"
format: 
  html:
    page-layout: article
editor: source
date: today
toc: true
toc-location: left
number-sections: true
number-depth: 3
bibliography: references.bib
comments:
  hypothesis: true
editor_options: 
  chunk_output_type: inline
execute:
  cache: false
---


```{r setup, eval=TRUE, message=FALSE, warning=FALSE}
# library(targets)
library(ggplot2)
library(tidyverse)
# library(tidybayes)
set.seed(2)
```


## Occupancy models

We begin with a simple occupancy model where the probability of observing a presence ($P$) is a Bernoulli process described by $w$ the probability of observation and $p$ the probability of a true presence. 

$$
\begin{align}
Pr(y = 1) &= Bernoulli(wp) \\
w &= 1 - (1 - d)^{effort} \\\\ 
logit(p) &= \alpha \\
logit(d) &= \beta \\\\
\alpha &\sim \text{N}(-1, 0.5) \\
\beta &\sim \text{N}(0, 0.5) \\\\
effort &= \text{Nb observers} + \text{Nb hours} 
\end{align}
$$

## Very simple occupancy model that controls for effort

The probability of observing a presence ($y = 1$) is the product of the probability of observing the specie and the probability that the specie is really there. The probability of not observing a presence is than the probability of missing the species while it is present AND the probability that the specie is absent. 


$$
y = 
\begin{cases}
y = 1, & wp \\
y = 0, & (1-w)p + 1 - p
\end{cases}
$$


## Simple Stan model

Parameters:
p = 0.7
d = 0.3
```{r}
#| echo: false

p = 0.7
d = 0.3

curve(1 - (1 - d)^x, xlim = c(0, 25), xlab = "Number of effort unit", ylab = "probability of observation")
abline(v = 1, h = d, lty = 2)
```

Création d'un faux jeux de données + distribution des observations de détection (y = 1) lorsqu'il y a une vraie présence (real_pres = 1)
```{r}
fake_data <- tibble(sample_id = 1:200,
                    real_pres = rbinom(n = length(sample_id),
                                       p = p,
                                       size = 1),
                    effort = round(
                      runif(
                        n = length(sample_id),
                        min = 1, max = 25)
                    )) |>
  rowwise() |> 
  mutate(pa = 1 - (1 - d)^effort,
         y = rbinom(n = 1, p = pa, size = 1) * real_pres)

fake_data

fake_data |> 
  mutate(y = as.factor(y)) |> 
  filter(real_pres == 1) |> 
  ggplot(aes(x = y, y = effort)) + 
  geom_violin() +
  geom_dotplot(binaxis = 'y', stackdir = 'center', dotsize = 0.5) + 
  coord_flip() + theme_classic()
```


```{r}
fake_data |> 
  # mutate(prop = abd/effort) |> 
  pull(y) |> mean()
```
